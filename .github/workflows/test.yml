name: tests
on:
  push:
    branches-ignore: [main]
  workflow_dispatch:

jobs:
  get-changed-projects:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.get-projects.outputs.projects }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: false
      - run: git fetch origin main:origin/main
      - name: Get changed projects
        id: get-projects
        run: |
          changed_projects=$(git diff --name-only origin/main...HEAD | awk -F/ '{print $1}' | sort -u | grep 'obsdev.*')
          if [[ -z "$changed_projects" ]]; then
            echo "No obsdev projects changed, skipping release"
            echo "projects=[]" >> $GITHUB_OUTPUT
          else
            # Convert to JSON array
            json=$(printf '%s\n' $changed_projects | jq -R . | jq -s -c .)
            echo "projects=$json" >> $GITHUB_OUTPUT
          fi
  unit-tests:
    needs: get-changed-projects
    if: ${{ needs.get-changed-projects.outputs.projects != '[]' }}
    strategy:
      matrix:
        os: ['ubuntu-latest']
        node_version: [lts/-1, lts/*, latest]
        project: ${{ fromJson(needs.get-changed-projects.outputs.projects) }}
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: yarn
      - name: Enable corepack
        id: enable-corepack
        run: |
          corepack enable
      - run: cd ${{ matrix.project }} && yarn
      - run: cd ${{ matrix.project }} && yarn build
      - run: cd ${{ matrix.project }} && yarn test
